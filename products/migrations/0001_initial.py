# Generated by Django 5.2.1 on 2025-06-09 19:03

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='products.category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_available', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('preparation_time', models.PositiveIntegerField(help_text='Preparation time in minutes', validators=[django.core.validators.MinValueValidator(1)])),
                ('ingredients', models.TextField(help_text='List of ingredients used in this product')),
                ('calories', models.PositiveIntegerField(blank=True, help_text='Calories per serving', null=True)),
                ('slug', models.SlugField(blank=True, max_length=220, unique=True)),
                ('image', models.ImageField(blank=True, help_text='Product image', null=True, upload_to='products/images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stock_quantity', models.PositiveIntegerField(default=0, help_text='Available stock quantity')),
                ('track_stock', models.BooleanField(default=False, help_text='Whether to track stock for this product')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-is_featured', 'category__order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NutritionalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calories', models.PositiveIntegerField(blank=True, null=True)),
                ('protein', models.DecimalField(blank=True, decimal_places=2, help_text='Grams', max_digits=5, null=True)),
                ('carbohydrates', models.DecimalField(blank=True, decimal_places=2, help_text='Grams', max_digits=5, null=True)),
                ('fat', models.DecimalField(blank=True, decimal_places=2, help_text='Grams', max_digits=5, null=True)),
                ('fiber', models.DecimalField(blank=True, decimal_places=2, help_text='Grams', max_digits=5, null=True)),
                ('sugar', models.DecimalField(blank=True, decimal_places=2, help_text='Grams', max_digits=5, null=True)),
                ('sodium', models.DecimalField(blank=True, decimal_places=2, help_text='Milligrams', max_digits=6, null=True)),
                ('contains_gluten', models.BooleanField(default=False)),
                ('contains_dairy', models.BooleanField(default=False)),
                ('contains_nuts', models.BooleanField(default=False)),
                ('contains_eggs', models.BooleanField(default=False)),
                ('contains_soy', models.BooleanField(default=False)),
                ('vegetarian', models.BooleanField(default=False)),
                ('vegan', models.BooleanField(default=False)),
                ('gluten_free', models.BooleanField(default=False)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition', to='products.product')),
            ],
            options={
                'verbose_name': 'Nutritional Information',
                'verbose_name_plural': 'Nutritional Information',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Additional product image', upload_to='products/gallery/')),
                ('alt_text', models.CharField(blank=True, help_text='Alternative text for accessibility', max_length=200)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_images', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=100)),
                ('customer_email', models.EmailField(max_length=254)),
                ('rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField()),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Review',
                'verbose_name_plural': 'Product Reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_available', 'is_featured'], name='products_pr_is_avai_f9ec00_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'is_available'], name='products_pr_categor_c898cc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productreview',
            unique_together={('product', 'customer_email')},
        ),
    ]
